name: Deploy to Firebase Hosting

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Set build metadata
        run: |
          echo "VITE_COMMIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "VITE_COMMIT_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "VITE_BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Detect package manager and install accordingly.
      - name: Install dependencies (lockfile-aware)
        id: deps
        run: |
          set -euo pipefail
          if [ -f pnpm-lock.yaml ]; then
            PM=pnpm
          elif [ -f yarn.lock ]; then
            PM=yarn
          elif [ -f package-lock.json ]; then
            PM=npm-lock
          else
            PM=npm-nolock
          fi

          echo "pm=$PM" >> $GITHUB_OUTPUT

          case "$PM" in
            pnpm)
              echo "Using pnpm"
              corepack enable
              corepack prepare pnpm@latest --activate
              pnpm install --frozen-lockfile
              ;;
            yarn)
              echo "Using yarn"
              corepack enable
              corepack prepare yarn@stable --activate
              yarn install --immutable
              ;;
            npm-lock)
              echo "Using npm (ci with lockfile)"
              npm ci
              ;;
            npm-nolock)
              echo "Using npm (no lockfile found) → npm install"
              # No lockfile yet — allow install (do not write lockfile)
              npm install --no-audit --no-fund
              ;;
          esac

      - name: Type Check
        run: npx tsc -p tsconfig.build.json --noEmit

      - name: Build
        run: npm run build
        env:
          VITE_COMMIT_SHA: ${{ env.VITE_COMMIT_SHA }}
          VITE_COMMIT_SHORT: ${{ env.VITE_COMMIT_SHORT }}
          VITE_BUILD_TIME: ${{ env.VITE_BUILD_TIME }}

      - name: Write /dist/version.json (no cache)
        run: |
          mkdir -p dist
          cat > dist/version.json <<'JSON'
          {
            "commit": "${{ env.VITE_COMMIT_SHA }}",
            "short": "${{ env.VITE_COMMIT_SHORT }}",
            "builtAt": "${{ env.VITE_BUILD_TIME }}"
          }
          JSON

      - name: Install firebase-tools
        run: npm i -g firebase-tools@14

      - name: Write service account creds
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT_STICKFIGHTPA" > $RUNNER_TEMP/gcp.json
        env:
          FIREBASE_SERVICE_ACCOUNT_STICKFIGHTPA: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_STICKFIGHTPA }}

      - name: Deploy Hosting
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/gcp.json
          PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID || 'stickfightpa' }}
          SITE_ID: ${{ vars.FIREBASE_SITE || 'stickfightpa' }}
        run: |
          firebase deploy --only hosting --project stickfightpa --site stickfightpa

      - name: Hit live /version.json
        run: |
          curl -fsS https://stickfightpa.web.app/version.json -o live.json
          cat live.json
          echo "EXPECTED=${{ env.VITE_COMMIT_SHA }}" >> $GITHUB_ENV

      - name: Verify live commit matches this build
        run: |
          ACTUAL=$(jq -r .commit live.json)
          echo "expected=$EXPECTED"
          echo "actual=$ACTUAL"
          test "$ACTUAL" = "$EXPECTED"
