name: Deploy to Firebase Hosting (Minimal)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: hosting-deploy-main
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # no caching until a lockfile is committed

      - name: Install dependencies (no lockfile safe)
        run: npm install --no-audit --no-fund

      - name: Type check (fast fail)
        run: npx tsc -p tsconfig.build.json --noEmit

      - name: Build metadata
        run: |
          echo "VITE_COMMIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "VITE_COMMIT_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "VITE_BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV

      - name: Build
        run: npm run build
        env:
          VITE_COMMIT_SHA: ${{ env.VITE_COMMIT_SHA }}
          VITE_COMMIT_SHORT: ${{ env.VITE_COMMIT_SHORT }}
          VITE_BUILD_TIME: ${{ env.VITE_BUILD_TIME }}

      - name: Write /dist/version.json (no cache)
        run: |
          mkdir -p dist
          printf '{\n  "commit": "%s",\n  "short": "%s",\n  "builtAt": "%s"\n}\n' \
            "${VITE_COMMIT_SHA}" "${VITE_COMMIT_SHORT}" "${VITE_BUILD_TIME}" > dist/version.json

      - name: Upload build artifact (dist/)
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ env.VITE_COMMIT_SHORT }}
          path: dist

      - name: Install firebase-tools
        run: npm i -g firebase-tools@14

      - name: Write service account creds
        run: echo "$FIREBASE_SERVICE_ACCOUNT_STICKFIGHTPA" > "$RUNNER_TEMP/gcp.json"
        env:
          FIREBASE_SERVICE_ACCOUNT_STICKFIGHTPA: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_STICKFIGHTPA }}

      - name: Deploy LIVE to Hosting site
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/gcp.json
        run: firebase deploy --only hosting --project stickfightpa --site stickfightpa --non-interactive

      - name: Smoke test LIVE (retry up to 6Ã—)
        run: |
          set -euo pipefail
          URL_HOME="https://stickfightpa.web.app/"
          URL_VER="https://stickfightpa.web.app/version.json"
          ok=0
          for i in 1 2 3 4 5 6; do
            echo "Attempt $i..."
            curl -fsSL -H 'Cache-Control: no-cache' -o home.html "$URL_HOME" || true
            curl -fsSL -H 'Cache-Control: no-cache' -o live.json "$URL_VER" || true
            if grep -q "RED CANARY ACTIVE" home.html; then
              echo "Found RED CANARY ACTIVE in home.html"
              ok=1; break
            fi
            LIVE_SHA=$(node -e "try{console.log(JSON.parse(require('fs').readFileSync('live.json','utf8')).commit||'')}catch(e){console.log('')}")
            echo "Expected: ${VITE_COMMIT_SHA}"
            echo "Live:     ${LIVE_SHA}"
            if [ "$LIVE_SHA" = "${VITE_COMMIT_SHA}" ]; then
              echo "version.json commit matches."
              ok=1; break
            fi
            echo "Not live yet; sleeping 8s..."
            sleep 8
          done
          if [ "$ok" != "1" ]; then
            echo "Canary check failed after retries"
            exit 1
          fi

      - name: Upload LIVE responses (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: live-${{ env.VITE_COMMIT_SHORT }}
          path: |
            home.html
            live.json
